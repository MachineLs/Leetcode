// ref 不是特别懂 https://www.jiakaobo.com/leetcode/4.%20Median%20of%20Two%20Sorted%20Arrays.html
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int len1 = nums1.length;
        int len2 = nums2.length;

        if (len1 > len2) {
            return findMedianSortedArrays(nums2, nums1);
        }

        int left = 0, right = len1;

        while (left <= right) {
            int m1 = left + (right - left) / 2;
            int m2 = (len1 + len2) / 2 - m1;
            //m1 + m2 = (len1 + len2) / 2

            double m1Left = (m1 == 0) ? Integer.MIN_VALUE : nums1[m1 - 1];
            double m1Right = (m1 == len1) ? Integer.MAX_VALUE : nums1[m1];

            double m2Left = (m2 == 0) ? Integer.MIN_VALUE : nums2[m2 - 1];
            double m2Right = (m2 == len2) ? Integer.MAX_VALUE : nums2[m2];

            if (m1Left > m2Right) {
                right = m1 - 1;
            } else if (m2Left > m1Right) {
                left = m1 + 1;
            } else {
                if ((len1 + len2) % 2 == 0) {
                    double medLeft = Math.max(m1Left, m2Left);
                    double medRight = Math.min(m1Right, m2Right);
                    return (medLeft + medRight) / 2.0;
                } else {
                    return Math.min(m1Right, m2Right);
                }
            }
        }
        return -1;
    }
}
