https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/solution/121-mai-mai-gu-piao-de-zui-jia-shi-ji-by-leetcode-/
Solution 1:
Step 1: record the minPrice, update the minPrice, 
Step2: compute the maxProfit when we iterate the Array

class Solution {
    public int maxProfit(int[] prices) {
        int len = prices.length;
        int[] M = new int[len];
        M[0] = 0;
        int minPrice = prices[0];
        int globalMax = 0;
        for (int i = 1; i < len; i++) {
            minPrice = Math.min(minPrice, prices[i]);
            // M[i] = Math.max(M[i-1], prices[i] - minPrice);
            globalMax = Math.max(globalMax, prices[i] - minPrice);
        }
        return globalMax;
    }
}
T and S: O(n) and O(1)

Solution2: DP is M to store the maxProfit

class Solution {
    public int maxProfit(int[] prices) {
        int len = prices.length;
        int[] M = new int[len]; //记录每次的最大值
        M[0] = 0;
        int minPrice = prices[0];
        int globalMax = 0;
        for (int i = 1; i < len; i++) {
            minPrice = Math.min(minPrice, prices[i]);
            M[i] = Math.max(M[i-1], prices[i] - minPrice); //linear scan 回头看
        }
        return M[i-1]; // 根据物理意义是0到i-1, 一共len个值被记录下来,
    }
}
