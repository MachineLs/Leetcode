ref: https://leetcode.cn/problems/print-zero-even-odd/solutions/1623560/by-be_a_better_coder-axp4/
solution: step1: zero: flag = 1, 我们想打0, 那么1%2 != 0 所以不会wait, 然后打印0, flag+此时flag=2
          step2: even: 2 % 4 != 0, 所以wait
          step3: odd: 2 % 4 = 2, 所以不wait, print odd number flag++ -> flag = 3
          step4: 又进zero 打印完毕 flag = 4
          step5: 进 even, 
          然后循环

class ZeroEvenOdd {
    private int n;
    private volatile int flag = 1;
    public ZeroEvenOdd(int n) {
        this.n = n;
    }

    // printNumber.accept(x) outputs "x", where x is an integer.
    public void zero(IntConsumer printNumber) throws InterruptedException {
        for (int i = 1; i <= n; i++) {
            synchronized (this) {
                while (flag % 2 == 0) wait();
                printNumber.accept(0);
                flag++;
                notifyAll();
            }
        }
    }

    public void even(IntConsumer printNumber) throws InterruptedException {
        for (int i = 2; i <= n; i += 2) {
            synchronized (this) {
                while (flag % 4 != 0) wait();
                printNumber.accept(i);
                flag++;
                notifyAll();
            }
        }
    }

    public void odd(IntConsumer printNumber) throws InterruptedException {
        for (int i = 1; i <= n; i += 2) {
            synchronized (this) {
                while (flag % 4 != 2) wait();
                printNumber.accept(i);
                flag++;
                notifyAll();
            }
        }
    }
}
