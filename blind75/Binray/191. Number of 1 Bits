O(1) and O(1)  because O(32) is O(c) 
public class Solution {
    // you need to treat n as an unsigned value
    public int hammingWeight(int n) {
        int res = 0;
        while (n != 0) {
            n = n & (n - 1);
            res++;
        }
        return res;
    }
}

Brian Kernighan 算法的原理是：对于任意整数 x，令 x=x&(x-1)，该运算将 xx 的二进制表示的最后一个 1 变成 0。


example: n binary-> 10000001   n-1 -> 10000000
n -> 1111 0100 n-1 -> 1111 0011
n-1可以把n第一个1后面的1全部转换, 然后&操作的时候 把从左向右第一1个(包括他)全部变成0

https://www.youtube.com/watch?v=5Km3utixwZs
