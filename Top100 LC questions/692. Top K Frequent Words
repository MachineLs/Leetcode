class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        HashMap<String, Integer> map = new HashMap<>();
        //add words to the map, and count each word
        for (int i = 0; i < words.length; i++) {
            map.put(words[i], map.getOrDefault(words[i], 0) + 1);
        }
        //convert the map keyset to the list, and sort the list using value(count)
        List<String> list = map.keySet().stream().collect(Collectors.toList());
        list.sort((a, b) -> map.get(a) == map.get(b) ? a.compareTo(b) : map.get(b) - map.get(a));
        List<String> res = new LinkedList<>();
        for (int i = 0; i < k; i++) {
            res.add(list.get(i));
        }
        return res;
    }
}
