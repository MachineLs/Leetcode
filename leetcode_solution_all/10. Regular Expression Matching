//没看懂答案
class Solution {
    int[][]memo;
    public boolean isMatch(String s, String p) {
        int m = s.length(), n = p.length();
        memo = new int[m][n];
        for (int i = 0; i < m; i++) {
            Arrays.fill(memo[i], -1);
        }
        //指针i,j从0开始
        return dp(s, 0, p, 0);
    }

    boolean dp(String s, int i, String p, int j) {
        int m = s.length(), n = p.length();
        //base case
        if (j == n) {
            return i == m;
        }
        if (i == m) {
            if ((n-j)%2==1) {
                return false;
            }
            
            for (;j+1<n;j+=2) {
                if (p.charAt(j+1)!= '*') {
                    return false;
                }
            }
            return true;
        }
        //查表
        if (memo[i][j] != -1) {
            return memo[i][j] == 1;
        }
        boolean res = false;
        if (s.charAt(i) == p.charAt(j) || p.charAt(j) == '.') {
            if (j<n-1 && p.charAt(j+1) == '*') {
                res = dp(s, i, p, j+2) || dp(s, i+1, p, j);
            } else {
                res = dp(s, i+1, p, j+1);
            }
        } else {
            if (j<n-1 && p.charAt(j+1) == '*') {
                res = dp(s,i,p,j+2);
            } else {
                res = false;
            }
        }
        memo[i][j] = res ? 1 : 0;
        return res;
    }
}
