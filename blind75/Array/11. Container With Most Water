class Solution {
    public int maxArea(int[] height) {
        int max = 0;
        int left = 0;
        int right = height.length - 1;
        //计算长方形面积,底*高, 高是取两边最小那一边,随着left和right向中心的移动,计算cur值,并且更新max值
        while (left < right) {
            int cur = Math.min(height[left], height[right]) * (right - left);
            max = Math.max(cur, max);
            //对于高边,谁小移谁,注意对于right是--
            if (height[left] < height[right]) {
                left++;
            } else {
                right--;//我错在++上
            }
        }
        return max;
    }
}

错误1
class Solution {
    public int maxArea(int[] height) {
        int left = 0, right = height.length - 1, res = 0;
        while (left < right) {
            int tmp = Math.min(height[left], height[right]) * (right - left); //注意我错在right - left + 1, right=2,left=1,宽是1,不需要+1了
            res = Math.max(tmp, res);
            if (height[left] > height[right]) right--;
            else left++;
           
        }
        return res;
    }
}
